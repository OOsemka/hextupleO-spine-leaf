# List of networks, used for j2 templating of enabled networks
#
# Supported values:
#
# name: Name of the network (mandatory)
# name_lower: lowercase version of name used for filenames
#             (optional, defaults to name.lower())
# service_net_map_replace: if name_lower is set to a custom name this should be set
#             to original default (optional).  This field is only necessary when
#             changing the default network names, not when adding a new custom network.
# enabled: Is the network enabled (optional, defaults to true)
# NOTE: False will use noop.yaml for unused legacy networks to support upgrades.
# vlan: vlan for the network (optional)
# vip: Enable creation of a virtual IP on this network
# ip_subnet: IP/CIDR, e.g. '192.168.24.0/24' or '2001:db8:fd00:1000::/64'
#            (optional, may use parameter defaults instead)
# allocation_pools: IP range list e.g. [{'start':'10.0.0.4', 'end':'10.0.0.250'}]
# gateway_ip: gateway for the network (optional, may use parameter defaults)
# routes: Optional, list of networks that should be routed via network gateway.
#         Example: [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
#         A single /16 supernet route could be used for 255 smaller /24 subnets.
# ipv6_subnet: Optional, sets default IPv6 subnet if IPv4 is already defined.
# ipv6_allocation_pools: Set default IPv6 allocation pools if IPv4 allocation pools
#                        are already defined.
# gateway_ipv6: Set an IPv6 gateway if IPv4 gateway already defined.
# ipv6: If ip_subnet not defined, this specifies that the network is IPv6-only.
# NOTE: IP-related values set parameter defaults in templates, may be overridden,
# either by operators, or e.g in environments/network-isolation-v6.yaml where we
# set some default IPv6 addresses.
# compat_name: for existing stack you may need to override the default
#              transformation for the resource's name.
#
# Example:
# - name Example
#   vip: false
#   ip_subnet: '10.0.2.0/24'
#   allocation_pools: [{'start': '10.0.2.4', 'end': '10.0.2.250'}]
#   gateway_ip: '10.0.2.254'
#
# To support backward compatibility, two versions of the network definitions
# will be created, network/<network>.yaml and network/<network>_v6.yaml. Only
# one of these files may be used in the deployment at a time, since the
# parameters used for configuration are the same in both files. In the
# future, this behavior may be changed to create only one file for custom
# networks. You may specify IPv6 addresses for ip_subnet, allocation_pools,
# and gateway_ip if no IPv4 addresses are used for a custom network, or set
# ipv6: true, and the network/<network>.yaml file will be configured as IPv6.
#
# For configuring both IPv4 and IPv6 on the same interface, use two separate
# networks, and then assign both IPs to the same interface in a custom NIC
# configuration templates.
#
# The ordering of the networks below will determine the order in which NICs
# are assigned in the network/config/multiple-nics templates, beginning with
# NIC2, Control Plane is always NIC1.

###INTERNAL API NETWORKS
- name: InternalApi
  name_lower: internal_api
  vip: true
  ip_subnet: '10.20.2.0/24'
  allocation_pools: [{'start': '10.20.2.100', 'end': '10.20.2.199'}]
  gateway_ip: '10.20.2.1'
  vlan: 0

- name: InternalApi3
  name_lower: internal_api3
  vip: false
  ip_subnet: '10.20.3.0/24'
  allocation_pools: [{'start': '10.20.3.100', 'end': '10.20.3.199'}]
  vlan: 0
  gateway_ip: '10.20.3.1'

- name: InternalApi4
  name_lower: internal_api4
  vip: false
  ip_subnet: '10.20.4.0/24'
  allocation_pools: [{'start': '10.20.4.100', 'end': '10.20.4.199'}]
  vlan: 0
  gateway_ip: '10.20.4.1'

###TENANT NETWORKS
- name: Tenant
  vip: false 
  name_lower: tenant
  ip_subnet: '10.30.2.0/24'
  allocation_pools: [{'start': '10.30.2.100', 'end': '10.30.2.199'}]
  gateway_ip: '10.30.2.1'
  vlan: 0

- name: Tenant3
  vip: false 
  name_lower: tenant3
  ip_subnet: '10.30.3.0/24'
  allocation_pools: [{'start': '10.30.3.100', 'end': '10.30.3.199'}]
  vlan: 0
  gateway_ip: '10.30.3.1'

- name: Tenant4
  vip: false 
  name_lower: tenant4
  ip_subnet: '10.30.4.0/24'
  allocation_pools: [{'start': '10.30.4.100', 'end': '10.30.4.199'}]
  vlan: 0
  gateway_ip: '10.30.4.1'



###STORAGE NETWORKS
- name: Storage
  vip: true 
  name_lower: storage
  ip_subnet: '10.40.2.0/24'
  allocation_pools: [{'start': '10.40.2.100', 'end': '10.40.2.199'}]
  gateway_ip: '10.40.2.1'
  vlan: 0

- name: Storage3
  vip: false 
  name_lower: storage3
  ip_subnet: '10.40.3.0/24'
  allocation_pools: [{'start': '10.40.3.100', 'end': '10.40.3.199'}]
  vlan: 0
  gateway_ip: '10.40.3.1'

- name: Storage4
  vip: false 
  name_lower: storage4
  ip_subnet: '10.40.4.0/24'
  allocation_pools: [{'start': '10.40.4.100', 'end': '10.40.4.199'}]
  vlan: 0
  gateway_ip: '10.40.4.1'

- name: StorageMgmt
  vip: true 
  name_lower: storage_mgmt
  ip_subnet: '10.50.2.0/24'
  allocation_pools: [{'start': '10.50.2.100', 'end': '10.50.2.199'}]
  gateway_ip: '10.50.2.1'
  vlan: 0

- name: StorageMgmt3
  vip: false
  name_lower: storage_mgmt3
  ip_subnet: '10.50.3.0/24'
  allocation_pools: [{'start': '10.50.3.100', 'end': '10.50.3.199'}]
  vlan: 0
  gateway_ip: '10.50.3.1'

- name: StorageMgmt4
  vip: false 
  name_lower: storage_mgmt4
  ip_subnet: '10.50.4.0/24'
  allocation_pools: [{'start': '10.50.4.100', 'end': '10.50.4.199'}]
  vlan: 0
  gateway_ip: '10.50.4.1'



###EXTERNAL NETWORKS
- name: External
  vip: true
  name_lower: external
  ip_subnet: '10.1.2.0/24'
  allocation_pools: [{'start': '10.1.2.100', 'end': '10.1.2.199'}]
  gateway_ip: '10.1.2.1'
  vlan: 0
